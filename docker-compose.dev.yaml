services:
  client:
    container_name: telegraph_client
    image: node:latest
    ports:
      - 8080:8080
    environment:
      - PORT=8080
    volumes:
      - type: bind
        source: ./client
        target: /client
    working_dir: /client
    command: bash -c "npm install && npm run start"
  api:
    container_name: telegraph_api
    image: node:latest
    ports:
      - 3000:3000
    environment:
      - PORT=3000
      - PGUSER=admin
      - PGHOST=db
      - PGPASSWORD=admin-password
      - PGDATABASE=records
      - PGPORT=5432
    volumes:
      - type: bind
        source: ./api
        target: /api
    working_dir: /api
    command: bash -c "npm install && npm run dev"
    depends_on:
      - db
  db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=records
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin-password
    volumes:
      - telegraphDB:/var/lib/postgresql/data
volumes:
  telegraphDB:
networks:
  default:
    name: telegraphNetwork
